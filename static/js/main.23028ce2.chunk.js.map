{"version":3,"sources":["Components/Button/Button.js","Components/comma/comma.js","Components/App/App.js","index.js"],"names":["Button","content","onButtonClick","type","className","onClick","comma","value","output","decimal","isNeg","includes","substring","indexOf","parseFloat","toLocaleString","App","useState","setValue","memory","setMemory","operator","setOperator","Date","time","handleButtonPress","num","toString","length","getHours","padStart","getMinutes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23028ce2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\n\r\nconst Button = ({content, onButtonClick, type}) => {\r\n    return (\r\n        <div \r\n          className={`Button ${content===\"0\" ? \"zero\" : \"\" } ${type || \"\"}`} \r\n          onClick={onButtonClick(content)}\r\n        >  \r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Button; \r\n","const comma = (value) => {\r\n    if (value === \"0\") return value;\r\n    let output = \"\";\r\n    let decimal =\"\";\r\n    let isNeg = false;\r\n    if(value.includes('.')) {\r\n        output = value.substring(0, value.indexOf(\".\"));\r\n        decimal = value.substring(value.indexOf(\".\"));\r\n      } else {\r\n        output = value;\r\n      }\r\n    if(parseFloat(value) < 0 ) {\r\n        isNeg = true;\r\n        output = output.substring(1);\r\n    }\r\n    return isNeg\r\n        ? \"-\" + parseFloat(output).toLocaleString() + decimal\r\n        : parseFloat(output).toLocaleString() + decimal;\r\n};\r\n\r\nexport default comma;","import React, {useState} from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport comma from \"../comma/comma\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [value, setValue] = useState(\"0\");\r\n    const [memory, setMemory] = useState(null);\r\n    const [operator, setOperator] = useState(null);\r\n    const [time] = useState(new Date());\r\n\r\n\r\n    const handleButtonPress = content => () =>{\r\n        const num = parseFloat(value);\r\n\r\n    if (content === \"AC\") {\r\n        setValue(\"0\");\r\n        setMemory(null);\r\n        setOperator(null);\r\n        return;\r\n    }\r\n    if (content === \"±\") {\r\n        setValue((num * -1).toString());\r\n        return;\r\n    }\r\n    if (content === \"%\") {\r\n        setValue((num / \"100\" ).toString());\r\n        setMemory(null);\r\n        return;\r\n    }\r\n    if (content === \".\") {\r\n        if (value.includes(2.2)) return;\r\n        setValue(value + \".\");\r\n        return;\r\n    }\r\n    if (content === \"+\") {\r\n        if (operator != null) {\r\n            if (operator === \"+\") {\r\n                setMemory((memory + parseFloat(value)));\r\n            }   else if (operator === \"−\") {\r\n                setMemory((memory - parseFloat(value)));\r\n            }   else if (operator === \"×\") {\r\n                setMemory((memory * parseFloat(value)));\r\n            }   else if (operator === \"÷\") {\r\n                setMemory((memory / parseFloat(value)));\r\n            }\r\n        }   else  {\r\n            setMemory(parseFloat(value));\r\n        }\r\n        setValue(\"0\");\r\n        setOperator(\"+\");\r\n        return;\r\n    }\r\n    if (content === \"−\") {\r\n        if (operator != null) {\r\n            if (operator === \"+\") {\r\n                setMemory((memory + parseFloat(value)));\r\n            }   else if (operator === \"−\") {\r\n                setMemory((memory - parseFloat(value)));\r\n            }   else if (operator === \"×\") {\r\n                setMemory((memory * parseFloat(value)));\r\n            }   else if (operator === \"÷\") {\r\n                setMemory((memory / parseFloat(value)));\r\n            }\r\n        }   else  {\r\n            setMemory(parseFloat(value));\r\n        }\r\n        setValue(\"0\");\r\n        setOperator(\"−\");\r\n        return;\r\n    }\r\n    if (content === \"×\") {\r\n        if (operator != null) {\r\n            if (operator === \"+\") {\r\n                setMemory((memory + parseFloat(value)));\r\n            }   else if (operator === \"−\") {\r\n                setMemory((memory - parseFloat(value)));\r\n            }   else if (operator === \"×\") {\r\n                setMemory((memory * parseFloat(value)));\r\n            }   else if (operator === \"÷\") {\r\n                setMemory((memory / parseFloat(value)));\r\n            }\r\n        }\r\n           else  {\r\n            setMemory(parseFloat(value));\r\n        }\r\n        setValue(\"0\");\r\n        setOperator(\"×\");\r\n        return;\r\n    }\r\n    if (content === \"%\") {\r\n        if (operator != null) {\r\n            if (operator === \"+\") {\r\n                setMemory((memory + parseFloat(value)));\r\n            }   else if (operator === \"−\") {\r\n                setMemory((memory - parseFloat(value)));\r\n            }   else if (operator === \"×\") {\r\n                setMemory((memory * parseFloat(value)));\r\n            }   else if (operator === \"÷\") {\r\n                setMemory((memory / parseFloat(value)));\r\n            }\r\n        }   else  {\r\n            setMemory(parseFloat(value));\r\n        }\r\n        setValue(\"0\");\r\n        setOperator(\"%\");\r\n        return;\r\n    }\r\n    if (content === \"÷\") {\r\n        if (operator != null) {\r\n            if (operator === \"+\") {\r\n                setMemory((memory + parseFloat(value)));\r\n            }   else if (operator === \"−\") {\r\n                setMemory((memory - parseFloat(value)));\r\n            }   else if (operator === \"×\") {\r\n                setMemory((memory * parseFloat(value)));\r\n            }   else if (operator === \"÷\") {\r\n                setMemory((memory / parseFloat(value)));\r\n            }\r\n        }   else  {\r\n            setMemory(parseFloat(value));\r\n        }\r\n        setValue(\"0\");\r\n        setOperator(\"÷\");\r\n        return;\r\n    }\r\n    if (content === \"=\") {\r\n        if (!operator) return;\r\n        \r\n        if (operator === \"+\") {\r\n          setValue((memory + parseFloat(value)).toString());\r\n        } else if (operator === \"−\") {\r\n          setValue((memory - parseFloat(value)).toString());\r\n        } else if (operator === \"×\") {\r\n          setValue((memory * parseFloat(value)).toString());\r\n        } else if (operator === \"÷\") {\r\n          setValue((memory / parseFloat(value)).toString());\r\n        }\r\n\r\n        setMemory(null);\r\n        setOperator(null);\r\n        return;\r\n    }\r\n    if(value[value.length-1] ===\".\") {\r\n        setValue(value + content)\r\n    }else {\r\n    setValue(parseFloat(num + content).toString());\r\n    }\r\n};  \r\n\r\n\r\n    return(\r\n            <>\r\n            <div className=\"Body\">\r\n                <div className=\"App\">\r\n                    <div className=\"top\">\r\n                        <div className=\"time\">\r\n                            {time.getHours().toString().padStart(2,\"0\")}:{time.getMinutes().toString().padStart(2,\"0\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"display\">{comma(value)}</div>\r\n                    <div className=\"buttons\">\r\n                        <Button \r\n                            onButtonClick={handleButtonPress} \r\n                            content=\"AC\" \r\n                            type=\"function\" \r\n                        />\r\n                        <Button onButtonClick={handleButtonPress} content=\"±\" type=\"function\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"%\" type=\"function\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"÷\" type=\"operator\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"7\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"8\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"9\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"×\" type=\"operator\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"4\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"5\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"6\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"−\" type=\"operator\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"1\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"2\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"3\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"+\" type=\"operator\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"0\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\".\" />\r\n                        <Button onButtonClick={handleButtonPress} content=\"=\" type=\"operator\" />\r\n                    </div>\r\n                    <div className=\"bottom\" /> \r\n                </div>\r\n            </div>\r\n\r\n            </>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}